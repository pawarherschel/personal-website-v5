---
import { exec as execCb } from "node:child_process";
import { stat } from "node:fs/promises";
import util from "node:util";
import { Icon } from "astro-icon/components";
import I18nKey from "../i18n/i18nKey";
import { i18n } from "../i18n/translation";
import { formatDateToYYYYMMDD } from "../utils/date-utils";
import { getUpdatedAndPublishedForFilePath } from "../utils/updated-and-published-utils";
import { url } from "../utils/url-utils";
interface Props {
	class: string;
	published?: Date;
	updated?: Date;
	tags: string[];
	category: string;
	hideTagsForMobile?: boolean;
	file: string;
	// hideUpdateDate?: boolean;
}
const {
	// published,
	// updated,
	tags,
	category,
	hideTagsForMobile = false,
	file,
	// hideUpdateDate = false,
} = Astro.props;
const className = Astro.props.class;
let { published, updated } = Astro.props;

const x = await getUpdatedAndPublishedForFilePath(file, updated, published);

updated = x.updated;
published = x.published;
---

<div class:list={["flex flex-wrap text-neutral-500 dark:text-neutral-400 items-center gap-4 gap-x-4 gap-y-2", className]}>
	<!-- publish date -->
	<div class="flex items-center">
		<div class="meta-icon"
		>
			<Icon name="material-symbols:calendar-today-outline-rounded" class="text-xl"></Icon>
		</div>
		<span class="text-50 text-sm font-medium">{formatDateToYYYYMMDD(published)}</span>
	</div>

	<!-- update date -->

	<div class="flex items-center">
		<div class="meta-icon"
		>
			<Icon name="material-symbols:edit-calendar-outline-rounded" class="text-xl"></Icon>
		</div>
		<span class="text-50 text-sm font-medium">{formatDateToYYYYMMDD(updated)}</span>
	</div>

	<!-- categories -->
	<div class="flex items-center">
		<div class="meta-icon"
		>
			<Icon name="material-symbols:book-2-outline-rounded" class="text-xl"></Icon>
		</div>
		<div class="flex flex-row flex-nowrap items-center">
			<a href={url(`/archive/category/${encodeURIComponent(category || 'uncategorized')}/`)} aria-label={`View all posts in the ${category} category`}
			   class="p-category link-lg transition text-50 text-sm font-medium
                            hover:text-[var(--primary)] dark:hover:text-[var(--primary)] whitespace-nowrap">
				{category || i18n(I18nKey.uncategorized)}
			</a>
		</div>
	</div>

	<!-- tags -->
	<div class:list={["items-center", {"flex": !hideTagsForMobile, "hidden md:flex": hideTagsForMobile}]}>
		<div class="meta-icon"
		>
			<Icon name="material-symbols:tag-rounded" class="text-xl"></Icon>
		</div>
		<div class="flex flex-row flex-nowrap items-center">
			{(tags && tags.length > 0) && tags.map((tag, i) => (
					<div class:list={[{"hidden": i == 0}, "mx-1.5 text-[var(--meta-divider)] text-sm"]}>/</div>
					<a href={url(`/archive/tag/${encodeURIComponent(tag)}/`)} aria-label={`View all posts with the ${tag} tag`}
					   class="p-category link-lg transition text-50 text-sm font-medium
                                hover:text-[var(--primary)] dark:hover:text-[var(--primary)] whitespace-nowrap">
						{tag}
					</a>
			))}
			{!(tags && tags.length > 0) && <div class="transition text-50 text-sm font-medium">{i18n(I18nKey.noTags)}</div>}
		</div>
	</div>
</div>